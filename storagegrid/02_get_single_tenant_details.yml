#!/usr/bin/env ansible-playbook

################################################################################
#
# Title:        02_get_single_tenant_details.yml 
# Author:       Adrian Bronder
# Date:         2020-06-23
# Description:  Get tenant information
#               with Ansible and REST APIs
#
# Modules:      URI (calling GRID REST APIs)
#
# URLs:         https://docs.netapp.com/sgws-113/index.jsp
#               https://<GRID Admin>/grid/apidocs.html
#
################################################################################

- hosts: localhost
  gather_facts: false
  vars:
    input_grid: &input_grid
      api_url:                 "https://{{ SG_ADMIN_NODE }}"
      auth_token:              "{{ grid_auth_response.json.data }}"
      validate_certs:          false
    input_tenant: &input_tenant
      api_url:                     "https://{{ SG_ADMIN_NODE }}"
      auth_token:                  "{{ tenant_auth_response.json.data }}"
      validate_certs:              false
  vars_files:
    - ../global.vars
  collections:
    - netapp.storagegrid

  tasks:
  - name: Get GRID authorization token
    uri:
      url:                     "https://{{ SG_ADMIN_NODE }}/api/v3/authorize"
      method:                  POST
      validate_certs:          false
      body_format:             json
      body: {
        "username":            "{{ SG_ADMIN_USER }}",
        "password":            "{{ SG_ADMIN_PASS }}",
        "cookie":              false,
        "csrfToken":           false
      }
    register: grid_auth_response

  - name: Get Grid Tenants
    netapp.storagegrid.na_sg_grid_info:
      gather_subset: grid_accounts_info
      <<: *input_grid
    register: grid_tenants

  - name: Get tenant by name
    set_fact:
      selected_tenant: "{{ grid_tenants.sg_info['grid/accounts'].data |
                        selectattr('name', 'equalto', TENANT) |
                        list }}"

  - name: Check for unique tenant
    fail:
      msg: "Unique tenant ID for given name '{{ TENANT }}' not found"
    when:
      ( selected_tenant | length ) != 1

  - name: Get Tenant Authorization Token
    uri:
      url: "https://{{ SG_ADMIN_NODE }}/api/v3/authorize"
      method: POST
      body: {
        "accountId": "{{ selected_tenant.0.id }}",
        "username": "root",
        "password": "{{ TENANT_ROOT_PASS }}",
        "cookie": true,
        "csrfToken": false
      }
      body_format: json
      validate_certs: false
    register: tenant_auth_response

  - name: Get Info for Tenant - {{ TENANT }}
    netapp.storagegrid.na_sg_org_info:
      gather_subset: 
        - org/config
        - org/usage
      <<: *input_tenant
    register: tenant_info_response

  - name: Print GRID tenants
    debug:
      msg:
        - "Tenant:             {{ tenant_info_response.sg_info['org/config'].data.account.name }}"
        - "ID:                 {{ tenant_info_response.sg_info['org/config'].data.account.id }}"
        - "Capabilities:       {{ tenant_info_response.sg_info['org/config'].data.account.capabilities.0 }}, {{ tenant_info_response.sg_info['org/config'].data.account.capabilities.1 }}"
        - "Policy:             Platform Services: {{ tenant_info_response.sg_info['org/config'].data.account.policy.allowPlatformServices }}, \
                               Quota: {{ ((tenant_info_response.sg_info['org/config'].data.account.policy.quotaObjectBytes / 1000 | pow(3)) | int) if tenant_info_response.sg_info['org/config'].data.account.policy.quotaObjectBytes != none else '--' }} GB, \
                               Use Identity Source: {{ tenant_info_response.sg_info['org/config'].data.account.policy.useAccountIdentitySource }}"
        - "Usage:              {{ tenant_info_response.sg_info['org/usage'].data.dataBytes / 1000 | pow(3) | int }} GB - {{ tenant_info_response.sg_info['org/usage'].data.objectCount }} Objects"

